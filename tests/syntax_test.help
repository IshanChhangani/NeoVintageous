# SYNTAX TEST "Packages/NeoVintageous/res/Help.sublime-syntax"

*intro.txt*     For Vim version 8.0.  Last change: 2017 Sep 04
# ^^^^^^^^^ entity.name
#          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ -entity

Introduction to Vim                 *ref* *reference*
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ -entity
#                                   ^^^^^  entity.name
#                                         ^^^^^^^^^^^  entity.name

1. Introduction                 |intro|
#                               ^^^^^^^ support.constant
2. Vim on the internet          |internet|
3. Credits                      |credits|
4. Notation                     |notation|
5. Modes, introduction          |vim-modes-intro|
#                               ^^^^^^^^^^^^^^^^^ support.constant
6. Switching from mode to mode  |mode-switching|
7. The window contents          |window-contents|
8. Definitions                  |definitions|

==============================================================================
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment
1. Introduction                     *intro*
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ -entity
#                                   ^^^^^^^ entity.name

Cursor motions                  *cursor-motions* *navigation*
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ -entity.name
#                               ^^^^^^^^^^^^^^^^ entity.name
#                                                ^^^^^^^^^^^^ entity.name

            *www* *WWW*  *faq* *FAQ* *distribution* *download*
#           ^^^^^ entity.name
#                 ^^^^^ entity.name
#                        ^^^^^ entity.name
#                              ^^^^^ entity.name
#                                    ^^^^^^^^^^^^^^ entity.name
#                                                   ^^^^^^^^^^ entity.name

    *name*
#   ^^^^^^ entity.name
    *name* *name*
#   ^^^^^^ entity.name
#          ^^^^^^ entity.name
    *name* *name* *name*
#   ^^^^^^ entity.name
#          ^^^^^^ entity.name
#                 ^^^^^^ entity.name
    *name.txt*
#   ^^^^^^^^^^ entity.name
    *name-dash*
#   ^^^^^^^^^^^ entity.name
    *:name*
#   ^^^^^^^ entity.name
    *:Name*
#   ^^^^^^^ entity.name
    *:S*
#   ^^^^ entity.name
    *i_CTRL-G_s* *i_CTRL-G_S*
#   ^^^^^^^^^^^^ entity.name
#                ^^^^^^^^^^^^ entity.name

HEADING             *tag*
# ^^^^^ storage
#                   ^^^^^ entity.name

HEADING             *tag* *tag*
# ^^^^^ storage
#                   ^^^^^ entity.name
#                         ^^^^^ entity.name

HEADING             *tag* *tag* *tag*
# ^^^^^ storage
#                   ^^^^^ entity.name
#                         ^^^^^ entity.name
#                               ^^^^^ entity.name

INTRODUCTION                                    *abolish* *:Abolish* *:Subvert*
# ^^^^^^^^^^ storage
#                                               ^^^^^^^^^ entity.name
#                                                         ^^^^^^^^^^ entity.name
#                                                                    ^^^^^^^^^^ entity.name

LINE OPERATIONS                                 *unimpaired-lines*
# ^^^^^^^^^^^^^ storage
#                                               ^^^^^^^^^^^^^^^^^^ entity.name

CHANGE LIST JUMPS           *changelist* *change-list-jumps* *E664*
# ^^^^^^^^^^^^^^^ storage
#                           ^^^^^^^^^^^^ entity.name
#                                        ^^^^^^^^^^^^^^^^^^^ entity.name
#                                                            ^^^^^^ entity.name

<kMultiply> keypad *            *keypad-multiply*
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ -entity.name
#                               ^^^^^^^^^^^^^^^^^ entity.name

.. |search|
#  ^^^^^^^^ support.constant
.. |search-offset|
#  ^^^^^^^^^^^^^^^ support.constant
.. |gui.txt|
#  ^^^^^^^^^ support.constant
.. |:s_flag|
#  ^^^^^^^^^ support.constant
    +-----------------------+
    |first line             |
#   ^^^^^^^^^^^^^^^^^^^^^^^^^ -support.constant
    |second line            |
#   ^^^^^^^^^^^^^^^^^^^^^^^^^ -support.constant
    |@                      |
#   ^^^^^^^^^^^^^^^^^^^^^^^^^ -support.constant
    |@                      |
#   ^^^^^^^^^^^^^^^^^^^^^^^^^ -support.constant
    +-----------------------+

. 'option'
# ^^^^^^^^ string
. 'helpfile'
# ^^^^^^^^^^ string
. 'c'
# ^^^ - string
. 'INVALID'
# ^^^^^^^^^ - string
. 'Invalid'
# ^^^^^^^^^ - string
. 'in-valid'
# ^^^^^^^^^^ - string
. 'in valid'
# ^^^^^^^^^^ - string

.. [count]
#  ^^^^^^^ markup.raw.inline
.. :foo[bar]
#  ^^^^^^^^^ -markup.raw.inline

.. <C-G>
#  ^^^^^ markup.raw.inline
.. <div>
#  ^^^^^ markup.raw.inline
.. <space>
#  ^^^^^^^ markup.raw.inline
.. <F1>
#  ^^^^ markup.raw.inline
.. <Help>
#  ^^^^^^ markup.raw.inline
.. {char1-char2}
#  ^^^^^^^^^^^^^ markup.raw.inline

.. \< invalid \>
#  ^^^^^^^^^^^^^ -entity

. CTRL-]
# ^^^^^^ markup.raw.inline
. CTRL-T
# ^^^^^^ markup.raw.inline
. CTRL-{char}
# ^^^^^^^^^^^ markup.raw.inline

. {Visual}
# ^^^^^^^^ markup.raw.inline
. {motion}
# ^^^^^^^^ markup.raw.inline
. {Vi does not have on-line help}
# ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ markup.raw.inline
. {a,b}
# ^^^^^ markup.raw.inline
. [x{motion}
#   ^^^^^^^^ markup.raw.inline
. {Visual}[x
# ^^^^^^^^ markup.raw.inline

..{Multi
# ^^^^^^ markup.raw.inline
line
# ^^ markup.raw.inline
text}
# ^^^ markup.raw.inline

            {not available when compiled without the
            inline |+byte_offset| feature}
#           ^^^^^^^ markup.raw.inline
#                  ^^^^^^^^^^^^^^ support.constant
#                                ^^^^^^^^^ markup.raw.inline

                            *{*
#                           ^^^ -markup.raw
  {           [count] paragraphs backward.  |exclusive| motion.
# ^^^^^^^^^^^^ -markup.raw
                            *}*
#                           ^^^ -markup.raw

>
    code...
    # ^^^^^ markup.raw.block
<

To get a literal "<lt>" in a mapping: >
    #                                 ^ markup.raw.block
    Block terminated by newline
    # ^^^^^^^^^^^^^^^^ markup.raw.block

Examples for mapping CTRL-H to the six characters "<Home>": >
    #                                                       ^ markup.raw.block
    Block terminated by text
    # ^^^^^^^^^^^^^^^^^ markup.raw.block
Text
# ^^ -markup.raw

        >
#       ^ -markup.raw

this: >

    Block that starts with blank
    line and terminates with text
    # ^^ markup.raw.block
Text
# ^^ -markup.raw

Mnemonic: encoding always comes before decoding; "[" always comes before "]".
